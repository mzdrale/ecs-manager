### Global variables
variables:
  GO_VERSION: '1.14'
  GOARCH: 'amd64'

### List of stages
stages:
  - go_build
  - release_go_binaries

### Shared content
.shared:
  tags:
    - gitlab-org

### Global cache
# Pass small bits of information between jobs
# cache:
#   key: ${CI_COMMIT_TAG}
#   paths:
#     - project_cache/

### Jobs
#  Build Job
.go_build:
  image: golang:${GO_VERSION}
  extends: .shared
  script:
    # Environment variables
    - export REVISION="${CI_COMMIT_TAG}"
    # Save job id
    - test -d project_cache || mkdir project_cache
    - echo ${CI_JOB_ID} > project_cache/${GOOS}-${GOARCH}_job_id.txt
    # Build Go binary and create an artifact
    - mkdir target
    - make build:${GOOS}
    - tar czvf target/${CI_PROJECT_NAME}-${REVISION}-${GOOS}-${GOARCH}.tar.gz ${CI_PROJECT_NAME}-${GOOS}-${GOARCH}
  artifacts:
    name: ${CI_PROJECT_NAME}
    paths:
      - target/*.tar.gz
      - project_cache/*.txt

# Build Job - Linux
go_build_linux:
  stage: go_build
  extends: .go_build
  variables:
    GOOS: "linux"
  only:
    refs:
      - tags

# Build Job - Darwin (macOS)
go_build_darwin:
  stage: go_build
  extends: .go_build
  variables:
    GOOS: "darwin"
  only:
    refs:
      - tags

# Release Job
release_go_binaries:
  image: golang:${GO_VERSION}
  stage: release_go_binaries
  extends: .shared
  dependencies:
    - go_build_linux
    - go_build_darwin
  script:
    # Environment variables
    - export LINUX_BUILD_JOB_ID=$(cat project_cache/linux-${GOARCH}_job_id.txt)
    - export DARWIN_BUILD_JOB_ID=$(cat project_cache/darwin-${GOARCH}_job_id.txt)
    # Create a release
    - |
      curl -sSL -X POST \
        -H 'Content-Type: application/json' \
        -H "PRIVATE-TOKEN: ${GITLAB_API_TOKEN}" \
        -d '{
          "name": "'"${CI_COMMIT_TAG}"'",
          "tag_name": "'"${CI_COMMIT_TAG}"'",
          "description": "'"New ${CI_PROJECT_NAME} release"'",
          "assets": {
            "links": [
              {
                "name": "'"${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-linux-${GOARCH}.tar.gz"'",
                "url": "'"https://gitlab.com/${GITLAB_USER_LOGIN}/${CI_PROJECT_NAME}/-/jobs/${LINUX_BUILD_JOB_ID}/artifacts/raw/target/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-linux-${GOARCH}.tar.gz"'"
              },
              {
                "name": "'"${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-darwin-${GOARCH}.tar.gz"'",
                "url": "'"https://gitlab.com/${GITLAB_USER_LOGIN}/${CI_PROJECT_NAME}/-/jobs/${DARWIN_BUILD_JOB_ID}/artifacts/raw/target/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-darwin-${GOARCH}.tar.gz"'"
              }
            ]
          }
        }' \
      "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/releases"
  only:
    refs:
      - tags
